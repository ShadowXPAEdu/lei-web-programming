@model JCAirbnb.Models.Property

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section CSS {
    <style>
        .review > span {
            margin: 0.2rem;
        }

            .review > span::after {
                content: '•';
            }

            .review > span:last-child::after {
                content: '';
            }

        .review-image > img {
            width: 50px;
            height: 50px;
        }

        .review-date {
            font-size: 0.8rem;
            color: gray;
        }

        .comment {
            margin: 1.2rem 0 1.2rem 0;
        }

        .comment-header > * {
            margin: 0.4rem;
        }

        .rating-progress-bar {
            display: block;
            width: 100%;
            height: 10px;
            border: 1px solid rgb(221, 221, 221);
        }

        .rating-progress-bar-active {
            display: block;
            background: gray;
            height: 10px;
        }

        .property-rating > span {
            margin: 0.2rem;
        }

        .property-review {
            font-size: 1.2rem;
            font-weight: bold;
        }
    </style>
}
<h1>Details</h1>

<dt>
    <h4>Property</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            <h4>Property:</h4>
        </dt>
        <dd class="col-sm-10">
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Location)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Location)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.BasePrice)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.BasePrice)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>
        <dt class="col-sm-2">
        </dt>
        <dd class="col-sm-10">
        </dd>
        <dt class="col-sm-2">
            <h4>Divisions:</h4>
        </dt>
        <dd class="col-sm-10">
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Divisions.Guest)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Divisions.Guest)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Divisions.Bedroom)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Divisions.Bedroom)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Divisions.Bed)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Divisions.Bed)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Divisions.Bath)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Divisions.Bath)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Divisions.PrivateBath)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Divisions.PrivateBath)
        </dd>
        <dt class="col-sm-2">
        </dt>
        <dd class="col-sm-10">
        </dd>
        <dt class="col-sm-2">
            <h4>Property type:</h4>
        </dt>
        <dd class="col-sm-10">
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PropertyType.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PropertyType.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PropertyType.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PropertyType.Description)
        </dd>
        <dt class="col-sm-2">
        </dt>
        <dd class="col-sm-10">
        </dd>
        <dt class="col-sm-2">
            <h4>Commodities:</h4>
        </dt>
        <div class="row">
            <dd class="property-commodities d-inline-flex flex-wrap">
                <div class="tutorial">
                    <span class="p-2">Included</span><p class="btn btn-sm btn-primary">&nbsp;</p>
                    <span class="p-2">Not included</span><p class="btn btn-sm btn-danger">&nbsp;</p>
                </div>
                <div class="col-sm-12"></div>
                @foreach (var commodity in Model.Commodities)
                {
                    <span class="btn btn-sm btn-@(commodity.Included ? "primary" : "danger")">
                        @Html.DisplayFor(m => commodity.Commodity.Title)
                    </span>
                }
            </dd>
        </div>
    </dl>
</dt>
<div id="reviews" class="reviews">
    <div class="reviews-header">
        <div class="review d-inline-flex property-review ">
            <span>
                @{var avg = Model.Ratings.GetAverage();}
                @avg.ToString("F2")
            </span>
            <span>
                @Model.Reviews.Count Reviews
            </span>
        </div>
        <div class="ratings d-flex justify-content-between">
            <div class="d-inline-flex flex-column col col-6">
                <span class="property-rating">
                    <span class="review">
                        <span class="rating-label">
                            @Html.DisplayNameFor(m => m.Ratings.Cleanliness)
                        </span>
                        <span class="rating-value">
                            @Html.DisplayFor(m => m.Ratings.Cleanliness)
                        </span>
                    </span>
                    <span class="rating-progress-bar"><span class="rating-progress-bar-active" style="width:@((Model.Ratings.Cleanliness / 5.0f) * 100)%;"></span></span>
                </span>
                <span class="property-rating">
                    <span class="review">
                        <span class="rating-label">
                            @Html.DisplayNameFor(m => m.Ratings.Communication)
                        </span>
                        <span class="rating-value">
                            @Html.DisplayFor(m => m.Ratings.Communication)
                        </span>
                    </span>
                    <span class="rating-progress-bar"><span class="rating-progress-bar-active" style="width:@((Model.Ratings.Communication / 5.0f) * 100)%;"></span></span>
                </span>
                <span class="property-rating">
                    <span class="review">
                        <span class="rating-label">
                            @Html.DisplayNameFor(m => m.Ratings.CheckIn)
                        </span>
                        <span class="rating-value">
                            @Html.DisplayFor(m => m.Ratings.CheckIn)
                        </span>
                    </span>
                    <span class="rating-progress-bar"><span class="rating-progress-bar-active" style="width:@((Model.Ratings.CheckIn / 5.0f) * 100)%;"></span></span>
                </span>
            </div>
            <div class="d-inline-flex flex-column justify-content-between col col-6">
                <span class="property-rating">
                    <span class="review">
                        <span class="rating-label">
                            @Html.DisplayNameFor(m => m.Ratings.Accuracy)
                        </span>
                        <span class="rating-value">
                            @Html.DisplayFor(m => m.Ratings.Accuracy)
                        </span>
                    </span>
                    <span class="rating-progress-bar"><span class="rating-progress-bar-active" style="width:@((Model.Ratings.Accuracy / 5.0f) * 100)%;"></span></span>
                </span>
                <span class="property-rating">
                    <span class="review">
                        <span class="rating-label">
                            @Html.DisplayNameFor(m => m.Ratings.Location)
                        </span>
                        <span class="rating-value">
                            @Html.DisplayFor(m => m.Ratings.Location)
                        </span>
                    </span>
                    <span class="rating-progress-bar"><span class="rating-progress-bar-active" style="width:@((Model.Ratings.Location / 5.0f) * 100)%;"></span></span>
                </span>
                <span class="property-rating">
                    <span class="review">
                        <span class="rating-label">
                            @Html.DisplayNameFor(m => m.Ratings.Value)
                        </span>
                        <span class="rating-value">
                            @Html.DisplayFor(m => m.Ratings.Value)
                        </span>
                    </span>
                    <span class="rating-progress-bar"><span class="rating-progress-bar-active" style="width:@((Model.Ratings.Value / 5.0f) * 100)%;"></span></span>
                </span>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        <h4>Coments:</h4>
    </div>
</div>
<div class="reviews-comments d-flex justify-content-between flex-wrap">
    @foreach (var review in Model.Reviews.OrderByDescending(r => r.Date))
    {
        <div class="comment col col-6">
            <div class="comment-header d-flex flex-row">
                <div class="review-image">
                    <img src="~/img/avatar.webp" />
                </div>
                <div class="d-flex flex-column">
                    <div class="review-reviewer">@review.User.UserName</div>
                    <div class="review-date">@review.Date.ToLongDateString()</div>
                </div>
            </div>
            <div class="review-text">
                @review.Text
            </div>
        </div>
    }
</div>

<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
